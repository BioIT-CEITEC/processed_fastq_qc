{
  "workflow_description": {
    "name": "processed_fastq_qc",
    "version": 2.0,
    "label": "Processed fastq QC",
    "type": "processed_fastq_qc",
    "run_parameters": {
      "cpu": 30,
      "memory": 65
    },
    "inputs": "raw_fastq/{sample}*fastq.gz",
    "outputs": [
      "processed_fastq/{sample}*fastq.gz",
      "logs/{sample}/preprocessing.log",
      "qc_reports/{sample}/cutadapt/{sample}_preprocessing.log",
      "qc_reports/processed_fastq_multiqc.html",
      "qc_reports/{sample}/processed_fastqc/*",
      "logs/{sample}/processed_fastqc_*.log",
      "logs/merge_fastq_qc.log"
    ],
    "report_index": "qc_reports/processed_fastq_multiqc.html",
    "reports": [
      "qc_reports/*"
    ]
  },
  "general_params": [
    "entity_name",
    "sample_name"
  ],
  "requested_params": [
    "is_paired"
  ],
  "gui_params": {
    "primary": {
      "UMI": {
        "label": "UMI",
        "type": "enum",
        "default": "no_umi",
        "list": {
          "no_umi": "No UMI",
          "BRONCO": "BRONCO",
          "custom_umi": "Custom specified UMI",
          "Quantseq FWD": "Quantseq FWD",
          "CORALL": "CORALL",
          "CS_UMI": "CS_UMI",
          "CS_UMI_sep_file": "CS_UMI_sep_file",
          "IDT": "IDT",
          "BRB": "BRB",
          "LYNX": "LYNX",
          "Qiaseq": "Qiaseq",
          "TruSight_Oncology": "TruSight Oncology UMI"
        }
      },
      "UMI_write_to": {
        "label": "Where to record the UMIs.",
        "list": {
          "fastq_header": "Fastq header",
          "sep_file": "Separate UMI fastq",
          "sep_file_gz": "Separate UMI fastq.gz"
        },
        "default": "fastq_header",
        "conditions": {
          "relevance": {
            "operand": "equal",
            "negation": false,
            "values": {
              "UMI": "custom_umi"
            }
          },
          "value": {
            "UMI": {
              "CS_UMI": "fastq_header",
              "CS_UMI_sep_file": "sep_file",
              "CORALL": "fastq_header"
            }
          }
        }
      },
      "UMI_from_R3_file": {
        "label": "UMI is in demultiplexed R3 file.",
        "type": "bolean",
        "default": false,
        "conditions": {
          "relevance": {
            "operand": "equal",
            "negation": false,
            "values": {
              "UMI": "custom_umi"
            }
          }
        }
      },
      "UMI_R1_start": {
        "label": "Start of UMI in R1.",
        "type": "int",
        "default": 3,
        "conditions": {
          "relevance": {
            "operand": "equal",
            "negation": false,
            "values": {
              "UMI": "custom_umi",
              "UMI_from_R3_file": false
            }
          },
          "value": {
            "UMI": {
              "CS_UMI": 1,
              "CS_UMI_sep_file": 1,
              "CORALL": 12
            }
          }
        }
      }
    },
    "detailed": {
      "trim_adapters": {
        "label": "Trim adapters",
        "type": "bool",
        "default": true
      },
      "trim_adapter_select": {
        "label": "Trim adapter selection",
        "type": "enum",
        "default": "illumina",
        "list": {
          "illumina": "Illumina (AGATCGGAAGAGC)",
          "nextera": "Nextera (CTGTCTCTTATA)",
          "smallRNA": "small RNA (TGGAATTCTCGG)",
          "custom": "Custom"
        },
        "conditions": {
          "relevance": {
            "operand": "equal",
            "negation": false,
            "values": {
              "trim_adapters": true
            }
          }
        }
      },
      "adapter_seq": {
        "label": "Adapter sequence (1-xx,2-yy,zz)",
        "type": "string",
        "default": "",
        "conditions": {
          "relevance": {
            "operand": "equal",
            "negation": false,
            "values": {
              "trim_adapter_select": "custom"
            }
          }
        }
      },
      "adapter_type": {
        "label": "Adapter type",
        "type": "enum",
        "default": "a",
        "list": {
          "a": "Regular 3 prime",
          "g": "Regular 5 prime",
          "b": "Both type"
        },
        "conditions": {
          "relevance": {
            "operand": "equal",
            "negation": false,
            "values": {
              "trim_adapters": true
            }
          }
        }
      },
      "max_error": {
        "label": "Max error",
        "type": "string",
        "default": "0.1",
        "conditions": {
          "relevance": {
            "operand": "equal",
            "negation": false,
            "values": {
              "trim_adapters": true
            }
          }
        }
      },
      "min_overlap": {
        "label": "Min overlap",
        "type": "int",
        "default": 3,
        "conditions": {
          "relevance": {
            "operand": "equal",
            "negation": false,
            "values": {
              "trim_adapters": true
            }
          }
        }
      },
      "quality_trim": {
        "label": "Quality trimming (5’ cutoff,3’ cutoff)",
        "type": "string",
        "default": "0,20"
      },
      "cut_left1": {
        "label": "Cut left 1",
        "type": "int",
        "default": 0,
        "conditions": {
          "value": {
            "RNAseq_type": {
              "quant_fwd": 12,
              "sense": 9
            },
            "UMI": {
              "Quantseq FWD": 6
            }
          }
        }
      },
      "cut_left2": {
        "label": "Cut left 2",
        "type": "int",
        "default": 0,
        "conditions": {
          "value": {
            "RNAseq_type": {
              "quant_rev": 12,
              "sense": 6
            }
          }
        }
      },
      "cut_right1": {
        "label": "Cut right 1",
        "type": "int",
        "default": 0
      },
      "cut_right2": {
        "label": "Cut right 2",
        "type": "int",
        "default": 0,
        "conditions": {
          "value": {
            "UMI": {
              "CORALL": 9
            }
          }
        }
      },
      "min_length": {
        "label": "Min length",
        "type": "int",
        "default": 35
      },
      "max_length": {
        "label": "Max length",
        "type": "int",
        "default": 250
      },
      "quality_base": {
        "label": "Quality base",
        "type": "enum",
        "default": "33",
        "list": {
          "33": "phred-33",
          "64": "phred-64"
        }
      }
    }
  }
}
